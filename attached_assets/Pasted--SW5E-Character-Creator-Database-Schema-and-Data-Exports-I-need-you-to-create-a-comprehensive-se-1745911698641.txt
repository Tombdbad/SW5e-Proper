# SW5E Character Creator Database Schema and Data Exports

I need you to create a comprehensive set of data structures for a Star Wars 5E character creation app built with React, Express, Drizzle ORM, and Neon PostgreSQL. Please generate:

## Database Schema

Create the Drizzle ORM schema definitions for the following tables:

1. `species` - Species options for character creation
2. `classes` - Character classes (Force-sensitive and non-Force users)
3. `backgrounds` - Character background options
4. `feats` - Special abilities and traits
5. `forcePowers` - Force abilities for Force-sensitive classes
6. `techPowers` - Tech abilities for tech-using classes
7. `maneuvers` - Combat maneuvers for martial classes
8. `equipment` - Weapons, armor, adventuring gear, and tools
9. `archetypes` - Subclasses/specializations for each class

## Data Export Functions

Create JavaScript export functions for each entity type that will populate the database with starter data. Each export should follow this pattern:

```javascript
export const speciesData = [
  {
    // All properties needed for the species table
  },
  // Additional species entries
];
```

## Required Properties for Each Entity Type

### Species
- id (string)
- name (string)
- description (text)
- abilityScoreIncrease (JSON object with ability scores and their bonuses)
- size (string)
- speed (integer)
- traits (array of trait objects with name and description)
- languages (array of strings)

### Classes
- id (string)
- name (string)
- description (text)
- hitDie (integer)
- primaryAbility (array of strings)
- savingThrows (array of strings)
- armorProficiencies (array of strings)
- weaponProficiencies (array of strings)
- skillProficiencies (array of strings)
- startingEquipment (array of strings)
- isForceUser (boolean)
- isTechUser (boolean)
- classFeatures (array of feature objects with level, name, and description)

### Backgrounds
- id (string)
- name (string)
- summary (text)
- feature (text)
- skillProficiencies (array of strings)
- toolProficiencies (array of strings)
- languages (array of strings)
- equipment (array of strings)
- suggestedCharacteristics (array of strings)

### Feats
- id (string)
- name (string)
- description (text)
- prerequisites (array of prerequisite objects)
- benefits (array of strings)

### Force Powers
- id (string)
- name (string)
- level (integer)
- forceAlignment (string: "Light", "Dark", "Universal", "Any")
- castingTime (string)
- range (string)
- duration (string)
- description (text)
- atHigherLevels (text)

### Tech Powers
- id (string)
- name (string)
- level (integer)
- activationTime (string)
- range (string)
- duration (string)
- description (text)
- atHigherLevels (text)

### Maneuvers
- id (string)
- name (string)
- type (string)
- discipline (string) 
- actionType (string)
- description (text)
- prerequisites (array of prerequisite objects)

### Equipment
- id (string)
- name (string)
- category (string: "Weapon", "Armor", "Adventuring Gear", "Tool", "Ammunition")
- price (integer)
- description (text)
- weight (float)
- properties (array of strings)
- damage (string, for weapons)
- armorClass (string, for armor)
- strengthRequirement (integer, for armor)
- stealthDisadvantage (boolean, for armor)

### Archetypes
- id (string)
- name (string)
- classId (string, foreign key to classes)
- description (text)
- features (array of feature objects with level, name, and description)

## Data Requirements

- Include at least 5 options for each species, class, and background
- Include at least 10 options for each feat, force power, tech power, and maneuver
- Include at least 20 options for equipment
- Include at least 3 archetypes for each class

Each data item should have descriptive Star Wars themed names and descriptions. Make sure all data is consistent with Star Wars 5E rules system but use your creativity to invent plausible Star Wars content.

## Database Connection and Setup

Create a file that sets up the connection to Neon PostgreSQL using Drizzle ORM with basic connection settings. Also create a seed script that populates the database with all the data.

## API Routes

Create Express route definitions for accessing each data entity type with basic CRUD operations.

I need this report to be well-commented, properly structured, and ready to implement in my Star Wars 5E character creator application.