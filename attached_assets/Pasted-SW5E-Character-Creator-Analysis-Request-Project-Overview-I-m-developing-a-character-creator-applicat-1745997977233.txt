SW5E Character Creator Analysis Request
Project Overview
I'm developing a character creator application for Star Wars 5th Edition (SW5E), a tabletop RPG based on D&D 5E mechanics but themed for the Star Wars universe. The application allows users to create and manage characters with SW5E-specific mechanics such as Force powers, tech abilities, starships, species from Star Wars, etc.
Current State Assessment
Please review my project structure and existing components to understand:

How the current data architecture is structured
How the project currently fetches and manages SW5E data (species, classes, etc.)
The state management approach being used
How character creation and progression is currently implemented

Specific Technical Questions
Database & API Layer

What's the best way to structure API calls to fetch SW5E content (species, classes, powers, etc.)?
How should the application handle relationship dependencies (e.g., class prerequisites for certain features)?
What caching strategy would be most effective for this type of data?

SW5E Game Mechanics Implementation

How should the application calculate derived values like:

Force/tech points based on class, level, and ability scores
HP calculations with species and class considerations
Proficiency bonuses that scale with level
Saving throw modifiers based on class proficiencies and ability scores


What's the best approach for handling trait/feature selections where players must choose from options?
How should the application validate prerequisites for feats, powers, and multiclassing?

State Management

What state management approach would best handle the complex character data?
How should session persistence work to save character progress?
What's the best way to handle form validation for character creation?

Performance Considerations

What optimizations should be implemented to handle the large dataset of SW5E content?
How should the application efficiently fetch only the data needed for each step of character creation?

Current Technical Stack

Frontend: React with TypeScript
Backend: Node.js with Express
Database: PostgreSQL with Drizzle ORM
State Management: [please specify what you're currently using]
API: RESTful endpoints

SW5E-Specific Concepts to Consider

Force/Tech casting with scaling point pools
Complex multiclassing rules specific to SW5E
Species trait selection systems
Archetype/subclass selection at different levels
Equipment modifications and enhancements
Starship customization and combat
Specialized character features like Force-sensitivity

Please provide recommendations for the best architecture to handle these requirements while maintaining performance and scalability.