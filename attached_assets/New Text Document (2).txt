// components/BasicInfo.tsx
import React from 'react';
import { useFormContext } from 'react-hook-form';
import LoreTooltip from './LoreTooltip';

const starSystems = [
  { id: 'coruscant', name: 'Coruscant', description: 'The galactic capital, an ecumenopolis covered in sprawling cityscape and bustling with activity.' },
  { id: 'tatooine', name: 'Tatooine', description: 'A desert world orbiting twin suns in the Outer Rim Territories, known for its harsh climate and Hutt-controlled criminal operations.' },
  { id: 'naboo', name: 'Naboo', description: 'A peaceful world with rolling plains, swamps, and beautiful cities known for its art and architecture.' },
  { id: 'kashyyyk', name: 'Kashyyyk', description: 'The Wookiee homeworld covered in dense forests and giant wroshyr trees.' },
  { id: 'corellia', name: 'Corellia', description: 'A planet known for its shipyards and skilled pilots in the Core Worlds.' },
  { id: 'mandalore', name: 'Mandalore', description: 'Homeworld of the Mandalorian warriors, a once beautiful planet ravaged by war.' },
];

const alignments = [
  { id: 'lawful_light', name: 'Lawful Light', description: 'Follows a strict code focused on justice, order, and protection of the innocent.' },
  { id: 'neutral_light', name: 'Neutral Light', description: 'Believes in the greater good but allows for flexibility in approach.' },
  { id: 'chaotic_light', name: 'Chaotic Light', description: 'Values freedom and individual expression while fighting for good.' },
  { id: 'lawful_neutral', name: 'Lawful Neutral', description: 'Follows rules and traditions without moral judgment.' },
  { id: 'true_neutral', name: 'True Neutral', description: 'Maintains balance and avoids extremes.' },
  { id: 'chaotic_neutral', name: 'Chaotic Neutral', description: 'Follows personal freedom above all else.' },
  { id: 'lawful_dark', name: 'Lawful Dark', description: 'Believes in order through domination and strict hierarchy.' },
  { id: 'neutral_dark', name: 'Neutral Dark', description: 'Values self-interest and power without needless cruelty.' },
  { id: 'chaotic_dark', name: 'Chaotic Dark', description: 'Embraces destruction, discord, and operates on pure selfishness.' },
];

const BasicInfo: React.FC = () => {
  const { register, formState: { errors } } = useFormContext();

  return (
    <div className="space-y-6">
      <h2 className="text-2xl font-bold text-yellow-400">Basic Information</h2>
      
      <div className="space-y-4">
        <div>
          <label htmlFor="name" className="block text-yellow-200 mb-1">
            Character Name
          </label>
          <input
            id="name"
            type="text"
            {...register('name')}
            className="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500 text-white"
            placeholder="Enter character name"
          />
          {errors.name && (
            <p className="mt-1 text-red-400 text-sm">{errors.name.message as string}</p>
          )}
        </div>

        <div>
          <label className="block text-yellow-200 mb-2">
            Alignment
            <span className="ml-2">
              <LoreTooltip 
                title="Force Alignment" 
                content="Your alignment reflects your character's moral compass and approach to the Force. Light side users draw power from peace and harmony, while Dark side users channel emotions like anger and passion."
              />
            </span>
          </label>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
            {alignments.map((alignment) => (
              <label 
                key={alignment.id}
                className="relative flex items-center p-3 bg-gray-800 hover:bg-gray-700 border border-gray-700 rounded-md cursor-pointer"
              >
                <input
                  type="radio"
                  {...register('alignment')}
                  value={alignment.id}
                  className="h-4 w-4 text-yellow-500 focus:ring-yellow-500 border-gray-500 bg-gray-700"
                />
                <span className="ml-2 block">
                  <span className="block text-sm font-medium">{alignment.name}</span>
                  <span className="block text-xs text-gray-400">{alignment.description}</span>
                </span>
              </label>
            ))}
          </div>
          {errors.alignment && (
            <p className="mt-1 text-red-400 text-sm">{errors.alignment.message as string}</p>
          )}
        </div>

        <div>
          <label className="block text-yellow-200 mb-2">
            Starting Location
            <span className="ml-2">
              <LoreTooltip 
                title="Star Systems" 
                content="Your character's starting location will influence their background and connections in the galaxy. Each planet has its own culture, politics, and dangers."
              />
            </span>
          </label>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
            {starSystems.map((system) => (
              <label 
                key={system.id}
                className="relative flex p-3 bg-gray-800 hover:bg-gray-700 border border-gray-700 rounded-md cursor-pointer"
              >
                <input
                  type="radio"
                  {...register('startingLocation')}
                  value={system.id}
                  className="h-4 w-4 text-yellow-500 focus:ring-yellow-500 border-gray-500 bg-gray-700"
                />
                <span className="ml-2 block">
                  <span className="block text-sm font-medium">{system.name}</span>
                  <span className="block text-xs text-gray-400">{system.description}</span>
                </span>
              </label>
            ))}
          </div>
          {errors.startingLocation && (
            <p className="mt-1 text-red-400 text-sm">{errors.startingLocation.message as string}</p>
          )}
        </div>

        <div>
          <label htmlFor="backstory" className="block text-yellow-200 mb-1">
            Personal Backstory (Optional)
          </label>
          <textarea
            id="backstory"
            {...register('backstory')}
            rows={4}
            className="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-yellow-500 text-white"
            placeholder="Share your character's history..."
          />
        </div>
      </div>
    </div>
  );
};

export default BasicInfo;

// components/SpeciesSelection.tsx
import React from 'react';
import { useFormContext } from 'react-hook-form';
import LoreTooltip from './LoreTooltip';

const species = [
  {
    id: 'human',
    name: 'Human',
    description: 'Adaptable and ambitious, humans can be found throughout the galaxy.',
    abilityAdjustments: '+1 to any two abilities',
    size: 'Medium',
    speed: '30 feet',
    traits: ['Versatile', 'Fast Learner'],
    lore: 'Humans are the most populous and politically dominant species in the galaxy. Their homeworld is believed to be Coruscant, though humans have spread to countless worlds over millennia. They are known for their adaptability, ambition, and short but intense lifespans compared to other species.'
  },
  {
    id: 'twi-lek',
    name: 'Twi\'lek',
    description: 'Graceful humanoids with distinctive head tentacles called lekku.',
    abilityAdjustments: '+2 Dexterity, +1 Charisma',
    size: 'Medium',
    speed: '30 feet',
    traits: ['Lekku Communication', 'Heat Resistance'],
    lore: 'Native to the harsh world of Ryloth, Twi\'leks are known for their colorful skin and twin head-tails (lekku) that can be used for subtle communication. Their society was traditionally clan-based, and many were forced into slavery during the Imperial era because of their exotic appearance.'
  },
  {
    id: 'wookiee',
    name: 'Wookiee',
    description: 'Tall, powerful warriors with great strength and loyalty.',
    abilityAdjustments: '+2 Strength, +1 Constitution',
    size: 'Medium (Tall)',
    speed: '30 feet',
    traits: ['Natural Climber', 'Powerful Build', 'Wookiee Rage'],
    lore: 'Hailing from the forest planet Kashyyyk, Wookiees are known for their great strength, technological aptitude, and unwavering loyalty. Their culture values honor and family bonds, with life debts being sacred. Despite their intimidating appearance, they possess a rich culture with advanced technology woven into the massive wroshyr trees of their homeworld.'
  },
  {
    id: 'chiss',
    name: 'Chiss',
    description: 'Blue-skinned humanoids with glowing red eyes and tactical brilliance.',
    abilityAdjustments: '+2 Intelligence, +1 Dexterity',
    size: 'Medium',
    speed: '30 feet',
    traits: ['Superior Darkvision', 'Tactical Mind'],
    lore: 'From the Unknown Regions comes the secretive Chiss species. Their isolated empire, the Chiss Ascendancy, developed independently from the Republic. Known for their brilliant tactical minds and distinctive blue skin and red eyes, they carefully guard their territory against outside threats. Some Chiss possess rare psychic navigational abilities.'
  },
  {
    id: 'bothan',
    name: 'Bothan',
    description: 'Furred humanoids known for espionage and information gathering.',
    abilityAdjustments: '+2 Charisma, +1 Dexterity',
    size: 'Medium',
    speed: '30 feet',
    traits: ['Bothan Spynet', 'Natural Stealth'],
    lore: 'Bothans are known throughout the galaxy for their extensive information network and skill in espionage. Native to Bothawui, their culture places high value on political maneuvering and the acquisition of information. Their fur ripples with their emotional state, making them practice emotional control in diplomatic situations. Many died to bring the Alliance information about the second Death Star.'
  },
  {
    id: 'cerean',
    name: 'Cerean',
    description: 'Humanoids with enlarged binary brains and enhanced mental abilities.',
    abilityAdjustments: '+2 Wisdom, +1 Intelligence',
    size: 'Medium',
    speed: '30 feet',
    traits: ['Binary Brain', 'Force Sensitive'],
    lore: 'From the planet Cerea, these humanoids are distinguished by their elongated heads that house binary brains, allowing them to process information differently than other species. Their society emphasizes harmony with nature and rejects excessive technology. Cereans must carefully manage their population as females are rare, with males outnumbering females twenty to one.'
  }
];

const SpeciesSelection: React.FC = () => {
  const { register, setValue, watch, formState: { errors } } = useFormContext();
  const selectedSpecies = watch('species');
  
  const handleSelectSpecies = (speciesId: string) => {
    setValue('species', speciesId, { shouldValidate: true });
  };

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold text-yellow-400">Choose Your Species</h2>
        <LoreTooltip 
          title="Species in Star Wars" 
          content="The galaxy is home to countless sentient species, each with their own unique biology, culture, and history. Your species choice will affect your character's abilities and how they are perceived in the galaxy."
          position="left"
        />
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {species.map((speciesOption) => (
          <div 
            key={speciesOption.id}
            className={`border rounded-lg overflow-hidden transition-all cursor-pointer ${
              selectedSpecies === speciesOption.id 
                ? 'border-yellow-400 bg-yellow-900 bg-opacity-30' 
                : 'border-gray-700 bg-gray-800 bg-opacity-50 hover:bg-gray-700'
            }`}
            onClick={() => handleSelectSpecies(speciesOption.id)}
          >
            <div className="p-4">
              <div className="flex justify-between items-start">
                <h3 className="text-lg font-bold">{speciesOption.name}</h3>
                <LoreTooltip 
                  title={`${speciesOption.name} Lore`} 
                  content={speciesOption.lore}
                  position="top"
                />
              </div>
              
              <p className="text-sm text-gray-300 mt-1">{speciesOption.description}</p>
              
              <div className="mt-3 space-y-2">
                <p className="text-sm"><span className="text-yellow-400">Ability Adjustments:</span> {speciesOption.abilityAdjustments}</p>
                <p className="text-sm"><span className="text-yellow-400">Size:</span> {speciesOption.size}</p>
                <p className="text-sm"><span className="text-yellow-400">Speed:</span> {speciesOption.speed}</p>
                <div className="text-sm">
                  <span className="text-yellow-400">Traits:</span>
                  <ul className="list-disc pl-5 mt-1 space-y-1">
                    {speciesOption.traits.map((trait, idx) => (
                      <li key={idx}>{trait}</li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
            
            <div className="px-4 py-2 bg-gray-900 bg-opacity-50">
              <label className="flex items-center">
                <input
                  type="radio"
                  {...register('species')}
                  value={speciesOption.id}
                  className="h-4 w-4 text-yellow-500 focus:ring-yellow-500 border-gray-500 bg-gray-700"
                  checked={selectedSpecies === speciesOption.id}
                  onChange={() => {}} // Handled by onClick on parent div
                />
                <span className="ml-2 text-sm">Select {speciesOption.name}</span>
              </label>
            </div>
          </div>
        ))}
      </div>
      
      {errors.species && (
        <p className="mt-1 text-red-400 text-sm">{errors.species.message as string}</p>
      )}
    </div>
  );
};

export default SpeciesSelection;rk', name: '