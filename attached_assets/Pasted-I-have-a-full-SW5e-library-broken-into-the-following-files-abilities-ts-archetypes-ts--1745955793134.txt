I have a full SW5e library broken into the following files:

---
abilities.ts  
archetypes.ts  
backgrounds.ts  
classes.ts  
equipment.ts  
exploits.ts  
feats.ts  
fightingStyles.ts  
forcePowers.ts  
items.ts  
maneuvers.ts  
skills.ts  
species.ts  
techPowers.ts  
---
combatmanagers.ts  
conditions.ts  
dice.ts  
droids.ts  
locations.ts  
monsters.ts  
npcs.ts  
parser.ts  
starSystems.ts  
starships.ts  
vehicles.ts  
weaponProperties.ts  
ObjectiveGenerator.ts  
---

Please generate a structured, developer-friendly report that summarizes the **data models and sample entries** for each of the following domains:

---

### 1. **Character-Building Content**
Extract from: `abilities.ts`, `backgrounds.ts`, `classes.ts`, `species.ts`, `feats.ts`, `fightingStyles.ts`, `archetypes.ts`, `skills.ts`
- Field-level descriptions (e.g. `modifier: number`, `name: string`)
- Example data for each
- Relationships (e.g., which classes get which archetypes)

### 2. **Combat & Ability Content**
Extract from: `exploits.ts`, `maneuvers.ts`, `forcePowers.ts`, `techPowers.ts`, `weaponProperties.ts`
- Full power and ability schema
- Example: `{ name, level, castingTime, range, description, tags, actionType }`
- Cooldowns, overcharge mechanics, scaling, prerequisites
- Weapon or force/tech power interactions

### 3. **Equipment & Inventory**
Extract from: `equipment.ts`, `items.ts`, `weaponProperties.ts`
- Fields for items, weapons, and gear
- Pricing, weight, rarity (if present), description
- Special properties and damage values

### 4. **Game Systems**
Extract from: `combatmanagers.ts`, `dice.ts`, `conditions.ts`, `ObjectiveGenerator.ts`
- Any logic that affects stateful mechanics in combat or encounters
- Dice rolling API patterns
- Status effects structure (e.g. "blinded", "restrained")

### 5. **World & Encounter Data**
Extract from: `locations.ts`, `monsters.ts`, `npcs.ts`, `starSystems.ts`, `vehicles.ts`, `starships.ts`, `droids.ts`
- Key models and sample data for:
  - NPCs, enemies, ships, planets, vehicles
- Stat blocks, abilities, AI behavior flags, etc.

---

### Output Format:
- Use **JSON** for data structures
- Use **Markdown** tables or bullets for summary if helpful
- For each file or category, include:
  - **Interface/schema**
  - **Sample data**
  - **Key relationships**

### Goal:
I will feed this to ChatGPT to build a fully dynamic character sheet, rule engine, and reference guide for my SW5e game. The output should support integration into a TypeScript-based React/Next.js application using Zustand for state management.
